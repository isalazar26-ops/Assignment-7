The Doctor Reporting Tree uses a binary tree structure because it naturally represents hierarchical relationships. Each doctor node can have up to two direct reports (left and right), allowing the system to model management relationships clearly and recursively. Trees are efficient for traversing structured data, making them ideal for representing organizational charts or decision hierarchies where each node depends on its subordinates. 

Differenet traversal methods serve distinct workflow purposes. Preorder traversal (root-left-right) is useful when actions must start from a supervisor before their reports. For example, cascading new hospital policies from department heads downward. Inorder traversal (left-root-right) can be applied when relationships between left and right subtrees represent ordered roles, such as seniority or experience level. Postorder traversal (left-right-root) is vulnerable when gathering results from subordinates before reporting upward, like compiling patient statistics from individual doctors before a department summary. 

The Emergency Priority Queue is implemented with a min-heap to simulate real-time hospital triage. The heap ensures that the patient with the lowest urgency number is always at the top, allowing immediate access and removal in 0(log n) time. This is essential in emergency systems where quick decision-making can save lives. New patients can be added efficiently while maintaining priority order, ensuring that critical cases are always addressed first. Overall, these two data structures demostrate how trees and heaps solve different organizational and time-sensitive problems in healthcare operations. 
